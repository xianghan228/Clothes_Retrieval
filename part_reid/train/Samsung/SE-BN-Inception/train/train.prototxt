name: "SE-BN-Inception"
# mean_value: 104, 117, 123
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  python_param {
    module: 'reid_layer.data_layer_baseline'
    layer: 'DataLayer'
    param_str: "{'batch_size':70,     'mean': (104.007,  116.669,  122.679),     'root_folder': '',     'source': '/data1/zwshen/samsung/part_reid/train/Samsung/train_list/alidfcd_sambox.txt',     'mirror': True, 'pad': 0,   'shape': (227, 227)}"
  }
  include: { phase: TRAIN }
}
layer {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "data"
  top: "conv1/7x7_s2"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "conv1/7x7_s2/bn"
  type: "BatchNorm"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv1/7x7_s2/bn/scale"
  type: "Scale"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1/relu_7x7"
  type: "ReLU"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/7x7_s2"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2/3x3_reduce"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "conv2/3x3_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "conv2/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2/relu_3x3_reduce"
  type: "ReLU"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3_reduce"
}
layer {
  name: "conv2/3x3"
  type: "Convolution"
  bottom: "conv2/3x3_reduce"
  top: "conv2/3x3"
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "conv2/3x3/bn"
  type: "BatchNorm"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2/3x3/bn/scale"
  type: "Scale"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2/relu_3x3"
  type: "ReLU"
  bottom: "conv2/3x3"
  top: "conv2/3x3"
}
layer {
  name: "pool2/3x3_s2"
  type: "Pooling"
  bottom: "conv2/3x3"
  top: "pool2/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3a/1x1"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/1x1"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3a/1x1/bn"
  type: "BatchNorm"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a/1x1/bn/scale"
  type: "Scale"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_1x1"
  type: "ReLU"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
}
layer {
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/3x3_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3a/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
}
layer {
  name: "inception_3a/3x3"
  type: "Convolution"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_3a/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_3x3"
  type: "ReLU"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
}
layer {
  name: "inception_3a/double3x3_reduce"
  type: "Convolution"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/double3x3_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3a/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_3a/double3x3_reduce"
  top: "inception_3a/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_3a/double3x3_reduce"
  top: "inception_3a/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_3a/double3x3_reduce"
  top: "inception_3a/double3x3_reduce"
}
layer {
  name: "inception_3a/double3x3a"
  type: "Convolution"
  bottom: "inception_3a/double3x3_reduce"
  top: "inception_3a/double3x3a"
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_3a/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_3a/double3x3a"
  top: "inception_3a/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_3a/double3x3a"
  top: "inception_3a/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_3a/double3x3a"
  top: "inception_3a/double3x3a"
}
layer {
  name: "inception_3a/double3x3b"
  type: "Convolution"
  bottom: "inception_3a/double3x3a"
  top: "inception_3a/double3x3b"
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_3a/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_3a/double3x3b"
  top: "inception_3a/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_3a/double3x3b"
  top: "inception_3a/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_3a/double3x3b"
  top: "inception_3a/double3x3b"
}
layer {
  name: "inception_3a/pool"
  type: "Pooling"
  bottom: "pool2/3x3_s2"
  top: "inception_3a/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3a/pool_proj"
  type: "Convolution"
  bottom: "inception_3a/pool"
  top: "inception_3a/pool_proj"
  convolution_param {
    num_output: 32
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3a/pool_proj/bn"
  type: "BatchNorm"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3a/pool_proj/bn/scale"
  type: "Scale"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/pool_proj"
}
layer {
  name: "inception_3a/concat"
  type: "Concat"
  bottom: "inception_3a/1x1"
  bottom: "inception_3a/3x3"
  bottom: "inception_3a/double3x3b"
  bottom: "inception_3a/pool_proj"
  top: "inception_3a/concat"
}
layer {
  name: "inception_3a_global_pool"
  type: "Pooling"
  bottom: "inception_3a/concat"
  top: "inception_3a_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_3a_1x1_down"
  type: "Convolution"
  bottom: "inception_3a_global_pool"
  top: "inception_3a_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_3a_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_3a_1x1_down"
  top: "inception_3a_1x1_down"
}
layer {
  name: "inception_3a_1x1_up"
  type: "Convolution"
  bottom: "inception_3a_1x1_down"
  top: "inception_3a_1x1_up"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_3a_prob"
  type: "Sigmoid"
  bottom: "inception_3a_1x1_up"
  top: "inception_3a_1x1_up"
}
layer {
  name: "inception_3a_prob_reshape"
  type: "Reshape"
  bottom: "inception_3a_1x1_up"
  top: "inception_3a_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_3a_scale"
  type: "Scale"
  bottom: "inception_3a/concat"
  bottom: "inception_3a_prob_reshape"
  top: "inception_3a/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_3b/1x1"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/1x1"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3b/1x1/bn"
  type: "BatchNorm"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b/1x1/bn/scale"
  type: "Scale"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_1x1"
  type: "ReLU"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
}
layer {
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/3x3_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3b/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
}
layer {
  name: "inception_3b/3x3"
  type: "Convolution"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3"
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_3b/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_3x3"
  type: "ReLU"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
}
layer {
  name: "inception_3b/double3x3_reduce"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3b/double3x3_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3b/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_3b/double3x3_reduce"
  top: "inception_3b/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_3b/double3x3_reduce"
  top: "inception_3b/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_3b/double3x3_reduce"
  top: "inception_3b/double3x3_reduce"
}
layer {
  name: "inception_3b/double3x3a"
  type: "Convolution"
  bottom: "inception_3b/double3x3_reduce"
  top: "inception_3b/double3x3a"
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_3b/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_3b/double3x3a"
  top: "inception_3b/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_3b/double3x3a"
  top: "inception_3b/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_3b/double3x3a"
  top: "inception_3b/double3x3a"
}
layer {
  name: "inception_3b/double3x3b"
  type: "Convolution"
  bottom: "inception_3b/double3x3a"
  top: "inception_3b/double3x3b"
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_3b/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_3b/double3x3b"
  top: "inception_3b/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_3b/double3x3b"
  top: "inception_3b/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_3b/double3x3b"
  top: "inception_3b/double3x3b"
}
layer {
  name: "inception_3b/pool"
  type: "Pooling"
  bottom: "inception_3a/output"
  top: "inception_3b/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_3b/pool_proj"
  type: "Convolution"
  bottom: "inception_3b/pool"
  top: "inception_3b/pool_proj"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3b/pool_proj/bn"
  type: "BatchNorm"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3b/pool_proj/bn/scale"
  type: "Scale"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/pool_proj"
}
layer {
  name: "inception_3b/concat"
  type: "Concat"
  bottom: "inception_3b/1x1"
  bottom: "inception_3b/3x3"
  bottom: "inception_3b/double3x3b"
  bottom: "inception_3b/pool_proj"
  top: "inception_3b/concat"
}
layer {
  name: "inception_3b_global_pool"
  type: "Pooling"
  bottom: "inception_3b/concat"
  top: "inception_3b_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_3b_1x1_down"
  type: "Convolution"
  bottom: "inception_3b_global_pool"
  top: "inception_3b_1x1_down"
  convolution_param {
    num_output: 20
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_3b_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_3b_1x1_down"
  top: "inception_3b_1x1_down"
}
layer {
  name: "inception_3b_1x1_up"
  type: "Convolution"
  bottom: "inception_3b_1x1_down"
  top: "inception_3b_1x1_up"
  convolution_param {
    num_output: 320
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_3b_prob"
  type: "Sigmoid"
  bottom: "inception_3b_1x1_up"
  top: "inception_3b_1x1_up"
}
layer {
  name: "inception_3b_prob_reshape"
  type: "Reshape"
  bottom: "inception_3b_1x1_up"
  top: "inception_3b_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_3b_scale"
  type: "Scale"
  bottom: "inception_3b/concat"
  bottom: "inception_3b_prob_reshape"
  top: "inception_3b/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_3c/3x3_reduce"
  type: "Convolution"
  bottom: "inception_3b/output"
  top: "inception_3c/3x3_reduce"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3c/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_3c/3x3_reduce"
  top: "inception_3c/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3c/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_3c/3x3_reduce"
  top: "inception_3c/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3c/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_3c/3x3_reduce"
  top: "inception_3c/3x3_reduce"
}
layer {
  name: "inception_3c/3x3"
  type: "Convolution"
  bottom: "inception_3c/3x3_reduce"
  top: "inception_3c/3x3"
  convolution_param {
    num_output: 160
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3c/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_3c/3x3"
  top: "inception_3c/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3c/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_3c/3x3"
  top: "inception_3c/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3c/relu_3x3"
  type: "ReLU"
  bottom: "inception_3c/3x3"
  top: "inception_3c/3x3"
}
layer {
  name: "inception_3c/double3x3_reduce"
  type: "Convolution"
  bottom: "inception_3b/output"
  top: "inception_3c/double3x3_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_3c/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_3c/double3x3_reduce"
  top: "inception_3c/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3c/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_3c/double3x3_reduce"
  top: "inception_3c/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3c/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_3c/double3x3_reduce"
  top: "inception_3c/double3x3_reduce"
}
layer {
  name: "inception_3c/double3x3a"
  type: "Convolution"
  bottom: "inception_3c/double3x3_reduce"
  top: "inception_3c/double3x3a"
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_3c/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_3c/double3x3a"
  top: "inception_3c/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3c/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_3c/double3x3a"
  top: "inception_3c/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3c/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_3c/double3x3a"
  top: "inception_3c/double3x3a"
}
layer {
  name: "inception_3c/double3x3b"
  type: "Convolution"
  bottom: "inception_3c/double3x3a"
  top: "inception_3c/double3x3b"
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3c/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_3c/double3x3b"
  top: "inception_3c/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_3c/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_3c/double3x3b"
  top: "inception_3c/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_3c/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_3c/double3x3b"
  top: "inception_3c/double3x3b"
}
layer {
  name: "inception_3c/pool/3x3_s2"
  type: "Pooling"
  bottom: "inception_3b/output"
  top: "inception_3c/pool/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_3c/concat"
  type: "Concat"
  bottom: "inception_3c/3x3"
  bottom: "inception_3c/double3x3b"
  bottom: "inception_3c/pool/3x3_s2"
  top: "inception_3c/concat"
}
layer {
  name: "inception_3c_global_pool"
  type: "Pooling"
  bottom: "inception_3c/concat"
  top: "inception_3c_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_3c_1x1_down"
  type: "Convolution"
  bottom: "inception_3c_global_pool"
  top: "inception_3c_1x1_down"
  convolution_param {
    num_output: 36
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_3c_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_3c_1x1_down"
  top: "inception_3c_1x1_down"
}
layer {
  name: "inception_3c_1x1_up"
  type: "Convolution"
  bottom: "inception_3c_1x1_down"
  top: "inception_3c_1x1_up"
  convolution_param {
    num_output: 576
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_3c_prob"
  type: "Sigmoid"
  bottom: "inception_3c_1x1_up"
  top: "inception_3c_1x1_up"
}
layer {
  name: "inception_3c_prob_reshape"
  type: "Reshape"
  bottom: "inception_3c_1x1_up"
  top: "inception_3c_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_3c_scale"
  type: "Scale"
  bottom: "inception_3c/concat"
  bottom: "inception_3c_prob_reshape"
  top: "inception_3c/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_4a/1x1"
  type: "Convolution"
  bottom: "inception_3c/output"
  top: "inception_4a/1x1"
  convolution_param {
    num_output: 224
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4a/1x1/bn"
  type: "BatchNorm"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a/1x1/bn/scale"
  type: "Scale"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_1x1"
  type: "ReLU"
  bottom: "inception_4a/1x1"
  top: "inception_4a/1x1"
}
layer {
  name: "inception_4a/3x3_reduce"
  type: "Convolution"
  bottom: "inception_3c/output"
  top: "inception_4a/3x3_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4a/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3_reduce"
}
layer {
  name: "inception_4a/3x3"
  type: "Convolution"
  bottom: "inception_4a/3x3_reduce"
  top: "inception_4a/3x3"
  convolution_param {
    num_output: 96
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4a/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_3x3"
  type: "ReLU"
  bottom: "inception_4a/3x3"
  top: "inception_4a/3x3"
}
layer {
  name: "inception_4a/double3x3_reduce"
  type: "Convolution"
  bottom: "inception_3c/output"
  top: "inception_4a/double3x3_reduce"
  convolution_param {
    num_output: 96
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4a/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4a/double3x3_reduce"
  top: "inception_4a/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4a/double3x3_reduce"
  top: "inception_4a/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_4a/double3x3_reduce"
  top: "inception_4a/double3x3_reduce"
}
layer {
  name: "inception_4a/double3x3a"
  type: "Convolution"
  bottom: "inception_4a/double3x3_reduce"
  top: "inception_4a/double3x3a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4a/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_4a/double3x3a"
  top: "inception_4a/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_4a/double3x3a"
  top: "inception_4a/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_4a/double3x3a"
  top: "inception_4a/double3x3a"
}
layer {
  name: "inception_4a/double3x3b"
  type: "Convolution"
  bottom: "inception_4a/double3x3a"
  top: "inception_4a/double3x3b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4a/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_4a/double3x3b"
  top: "inception_4a/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_4a/double3x3b"
  top: "inception_4a/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_4a/double3x3b"
  top: "inception_4a/double3x3b"
}
layer {
  name: "inception_4a/pool"
  type: "Pooling"
  bottom: "inception_3c/output"
  top: "inception_4a/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4a/pool_proj"
  type: "Convolution"
  bottom: "inception_4a/pool"
  top: "inception_4a/pool_proj"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4a/pool_proj/bn"
  type: "BatchNorm"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4a/pool_proj/bn/scale"
  type: "Scale"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/pool_proj"
}
layer {
  name: "inception_4a/concat"
  type: "Concat"
  bottom: "inception_4a/1x1"
  bottom: "inception_4a/3x3"
  bottom: "inception_4a/double3x3b"
  bottom: "inception_4a/pool_proj"
  top: "inception_4a/concat"
}
layer {
  name: "inception_4a_global_pool"
  type: "Pooling"
  bottom: "inception_4a/concat"
  top: "inception_4a_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4a_1x1_down"
  type: "Convolution"
  bottom: "inception_4a_global_pool"
  top: "inception_4a_1x1_down"
  convolution_param {
    num_output: 36
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4a_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4a_1x1_down"
  top: "inception_4a_1x1_down"
}
layer {
  name: "inception_4a_1x1_up"
  type: "Convolution"
  bottom: "inception_4a_1x1_down"
  top: "inception_4a_1x1_up"
  convolution_param {
    num_output: 576
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4a_prob"
  type: "Sigmoid"
  bottom: "inception_4a_1x1_up"
  top: "inception_4a_1x1_up"
}
layer {
  name: "inception_4a_prob_reshape"
  type: "Reshape"
  bottom: "inception_4a_1x1_up"
  top: "inception_4a_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4a_scale"
  type: "Scale"
  bottom: "inception_4a/concat"
  bottom: "inception_4a_prob_reshape"
  top: "inception_4a/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_4b/1x1"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/1x1"
  convolution_param {
    num_output: 192
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4b/1x1/bn"
  type: "BatchNorm"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b/1x1/bn/scale"
  type: "Scale"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_1x1"
  type: "ReLU"
  bottom: "inception_4b/1x1"
  top: "inception_4b/1x1"
}
layer {
  name: "inception_4b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/3x3_reduce"
  convolution_param {
    num_output: 96
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4b/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3_reduce"
}
layer {
  name: "inception_4b/3x3"
  type: "Convolution"
  bottom: "inception_4b/3x3_reduce"
  top: "inception_4b/3x3"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4b/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_3x3"
  type: "ReLU"
  bottom: "inception_4b/3x3"
  top: "inception_4b/3x3"
}
layer {
  name: "inception_4b/double3x3_reduce"
  type: "Convolution"
  bottom: "inception_4a/output"
  top: "inception_4b/double3x3_reduce"
  convolution_param {
    num_output: 96
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4b/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4b/double3x3_reduce"
  top: "inception_4b/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4b/double3x3_reduce"
  top: "inception_4b/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_4b/double3x3_reduce"
  top: "inception_4b/double3x3_reduce"
}
layer {
  name: "inception_4b/double3x3a"
  type: "Convolution"
  bottom: "inception_4b/double3x3_reduce"
  top: "inception_4b/double3x3a"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4b/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_4b/double3x3a"
  top: "inception_4b/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_4b/double3x3a"
  top: "inception_4b/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_4b/double3x3a"
  top: "inception_4b/double3x3a"
}
layer {
  name: "inception_4b/double3x3b"
  type: "Convolution"
  bottom: "inception_4b/double3x3a"
  top: "inception_4b/double3x3b"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4b/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_4b/double3x3b"
  top: "inception_4b/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_4b/double3x3b"
  top: "inception_4b/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_4b/double3x3b"
  top: "inception_4b/double3x3b"
}
layer {
  name: "inception_4b/pool"
  type: "Pooling"
  bottom: "inception_4a/output"
  top: "inception_4b/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4b/pool_proj"
  type: "Convolution"
  bottom: "inception_4b/pool"
  top: "inception_4b/pool_proj"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4b/pool_proj/bn"
  type: "BatchNorm"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4b/pool_proj/bn/scale"
  type: "Scale"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/pool_proj"
}
layer {
  name: "inception_4b/concat"
  type: "Concat"
  bottom: "inception_4b/1x1"
  bottom: "inception_4b/3x3"
  bottom: "inception_4b/double3x3b"
  bottom: "inception_4b/pool_proj"
  top: "inception_4b/concat"
}
layer {
  name: "inception_4b_global_pool"
  type: "Pooling"
  bottom: "inception_4b/concat"
  top: "inception_4b_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4b_1x1_down"
  type: "Convolution"
  bottom: "inception_4b_global_pool"
  top: "inception_4b_1x1_down"
  convolution_param {
    num_output: 36
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4b_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4b_1x1_down"
  top: "inception_4b_1x1_down"
}
layer {
  name: "inception_4b_1x1_up"
  type: "Convolution"
  bottom: "inception_4b_1x1_down"
  top: "inception_4b_1x1_up"
  convolution_param {
    num_output: 576
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4b_prob"
  type: "Sigmoid"
  bottom: "inception_4b_1x1_up"
  top: "inception_4b_1x1_up"
}
layer {
  name: "inception_4b_prob_reshape"
  type: "Reshape"
  bottom: "inception_4b_1x1_up"
  top: "inception_4b_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4b_scale"
  type: "Scale"
  bottom: "inception_4b/concat"
  bottom: "inception_4b_prob_reshape"
  top: "inception_4b/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_4c/1x1"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/1x1"
  convolution_param {
    num_output: 160
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4c/1x1/bn"
  type: "BatchNorm"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c/1x1/bn/scale"
  type: "Scale"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_1x1"
  type: "ReLU"
  bottom: "inception_4c/1x1"
  top: "inception_4c/1x1"
}
layer {
  name: "inception_4c/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/3x3_reduce"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4c/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3_reduce"
}
layer {
  name: "inception_4c/3x3"
  type: "Convolution"
  bottom: "inception_4c/3x3_reduce"
  top: "inception_4c/3x3"
  convolution_param {
    num_output: 160
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4c/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_3x3"
  type: "ReLU"
  bottom: "inception_4c/3x3"
  top: "inception_4c/3x3"
}
layer {
  name: "inception_4c/double3x3_reduce"
  type: "Convolution"
  bottom: "inception_4b/output"
  top: "inception_4c/double3x3_reduce"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4c/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4c/double3x3_reduce"
  top: "inception_4c/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4c/double3x3_reduce"
  top: "inception_4c/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_4c/double3x3_reduce"
  top: "inception_4c/double3x3_reduce"
}
layer {
  name: "inception_4c/double3x3a"
  type: "Convolution"
  bottom: "inception_4c/double3x3_reduce"
  top: "inception_4c/double3x3a"
  convolution_param {
    num_output: 160
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4c/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_4c/double3x3a"
  top: "inception_4c/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_4c/double3x3a"
  top: "inception_4c/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_4c/double3x3a"
  top: "inception_4c/double3x3a"
}
layer {
  name: "inception_4c/double3x3b"
  type: "Convolution"
  bottom: "inception_4c/double3x3a"
  top: "inception_4c/double3x3b"
  convolution_param {
    num_output: 160
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4c/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_4c/double3x3b"
  top: "inception_4c/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_4c/double3x3b"
  top: "inception_4c/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_4c/double3x3b"
  top: "inception_4c/double3x3b"
}
layer {
  name: "inception_4c/pool"
  type: "Pooling"
  bottom: "inception_4b/output"
  top: "inception_4c/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4c/pool_proj"
  type: "Convolution"
  bottom: "inception_4c/pool"
  top: "inception_4c/pool_proj"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4c/pool_proj/bn"
  type: "BatchNorm"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4c/pool_proj/bn/scale"
  type: "Scale"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4c/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/pool_proj"
}
layer {
  name: "inception_4c/concat"
  type: "Concat"
  bottom: "inception_4c/1x1"
  bottom: "inception_4c/3x3"
  bottom: "inception_4c/double3x3b"
  bottom: "inception_4c/pool_proj"
  top: "inception_4c/concat"
}
layer {
  name: "inception_4c_global_pool"
  type: "Pooling"
  bottom: "inception_4c/concat"
  top: "inception_4c_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4c_1x1_down"
  type: "Convolution"
  bottom: "inception_4c_global_pool"
  top: "inception_4c_1x1_down"
  convolution_param {
    num_output: 38
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4c_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4c_1x1_down"
  top: "inception_4c_1x1_down"
}
layer {
  name: "inception_4c_1x1_up"
  type: "Convolution"
  bottom: "inception_4c_1x1_down"
  top: "inception_4c_1x1_up"
  convolution_param {
    num_output: 608
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4c_prob"
  type: "Sigmoid"
  bottom: "inception_4c_1x1_up"
  top: "inception_4c_1x1_up"
}
layer {
  name: "inception_4c_prob_reshape"
  type: "Reshape"
  bottom: "inception_4c_1x1_up"
  top: "inception_4c_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4c_scale"
  type: "Scale"
  bottom: "inception_4c/concat"
  bottom: "inception_4c_prob_reshape"
  top: "inception_4c/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_4d/1x1"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/1x1"
  convolution_param {
    num_output: 96
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4d/1x1/bn"
  type: "BatchNorm"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d/1x1/bn/scale"
  type: "Scale"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_1x1"
  type: "ReLU"
  bottom: "inception_4d/1x1"
  top: "inception_4d/1x1"
}
layer {
  name: "inception_4d/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/3x3_reduce"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4d/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3_reduce"
}
layer {
  name: "inception_4d/3x3"
  type: "Convolution"
  bottom: "inception_4d/3x3_reduce"
  top: "inception_4d/3x3"
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4d/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_3x3"
  type: "ReLU"
  bottom: "inception_4d/3x3"
  top: "inception_4d/3x3"
}
layer {
  name: "inception_4d/double3x3_reduce"
  type: "Convolution"
  bottom: "inception_4c/output"
  top: "inception_4d/double3x3_reduce"
  convolution_param {
    num_output: 160
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4d/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4d/double3x3_reduce"
  top: "inception_4d/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4d/double3x3_reduce"
  top: "inception_4d/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_4d/double3x3_reduce"
  top: "inception_4d/double3x3_reduce"
}
layer {
  name: "inception_4d/double3x3a"
  type: "Convolution"
  bottom: "inception_4d/double3x3_reduce"
  top: "inception_4d/double3x3a"
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4d/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_4d/double3x3a"
  top: "inception_4d/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_4d/double3x3a"
  top: "inception_4d/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_4d/double3x3a"
  top: "inception_4d/double3x3a"
}
layer {
  name: "inception_4d/double3x3b"
  type: "Convolution"
  bottom: "inception_4d/double3x3a"
  top: "inception_4d/double3x3b"
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4d/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_4d/double3x3b"
  top: "inception_4d/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_4d/double3x3b"
  top: "inception_4d/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_4d/double3x3b"
  top: "inception_4d/double3x3b"
}
layer {
  name: "inception_4d/pool"
  type: "Pooling"
  bottom: "inception_4c/output"
  top: "inception_4d/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_4d/pool_proj"
  type: "Convolution"
  bottom: "inception_4d/pool"
  top: "inception_4d/pool_proj"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4d/pool_proj/bn"
  type: "BatchNorm"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4d/pool_proj/bn/scale"
  type: "Scale"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4d/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/pool_proj"
}
layer {
  name: "inception_4d/concat"
  type: "Concat"
  bottom: "inception_4d/1x1"
  bottom: "inception_4d/3x3"
  bottom: "inception_4d/double3x3b"
  bottom: "inception_4d/pool_proj"
  top: "inception_4d/concat"
}
layer {
  name: "inception_4d_global_pool"
  type: "Pooling"
  bottom: "inception_4d/concat"
  top: "inception_4d_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4d_1x1_down"
  type: "Convolution"
  bottom: "inception_4d_global_pool"
  top: "inception_4d_1x1_down"
  convolution_param {
    num_output: 38
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4d_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4d_1x1_down"
  top: "inception_4d_1x1_down"
}
layer {
  name: "inception_4d_1x1_up"
  type: "Convolution"
  bottom: "inception_4d_1x1_down"
  top: "inception_4d_1x1_up"
  convolution_param {
    num_output: 608
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4d_prob"
  type: "Sigmoid"
  bottom: "inception_4d_1x1_up"
  top: "inception_4d_1x1_up"
}
layer {
  name: "inception_4d_prob_reshape"
  type: "Reshape"
  bottom: "inception_4d_1x1_up"
  top: "inception_4d_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4d_scale"
  type: "Scale"
  bottom: "inception_4d/concat"
  bottom: "inception_4d_prob_reshape"
  top: "inception_4d/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_4e/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/3x3_reduce"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4e/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3_reduce"
}
layer {
  name: "inception_4e/3x3"
  type: "Convolution"
  bottom: "inception_4e/3x3_reduce"
  top: "inception_4e/3x3"
  convolution_param {
    num_output: 192
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_4e/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_3x3"
  type: "ReLU"
  bottom: "inception_4e/3x3"
  top: "inception_4e/3x3"
}
layer {
  name: "inception_4e/double3x3_reduce"
  type: "Convolution"
  bottom: "inception_4d/output"
  top: "inception_4e/double3x3_reduce"
  convolution_param {
    num_output: 192
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_4e/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_4e/double3x3_reduce"
  top: "inception_4e/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_4e/double3x3_reduce"
  top: "inception_4e/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_4e/double3x3_reduce"
  top: "inception_4e/double3x3_reduce"
}
layer {
  name: "inception_4e/double3x3a"
  type: "Convolution"
  bottom: "inception_4e/double3x3_reduce"
  top: "inception_4e/double3x3a"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_4e/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_4e/double3x3a"
  top: "inception_4e/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_4e/double3x3a"
  top: "inception_4e/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_4e/double3x3a"
  top: "inception_4e/double3x3a"
}
layer {
  name: "inception_4e/double3x3b"
  type: "Convolution"
  bottom: "inception_4e/double3x3a"
  top: "inception_4e/double3x3b"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_4e/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_4e/double3x3b"
  top: "inception_4e/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_4e/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_4e/double3x3b"
  top: "inception_4e/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_4e/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_4e/double3x3b"
  top: "inception_4e/double3x3b"
}
layer {
  name: "inception_4e/pool/3x3_s2"
  type: "Pooling"
  bottom: "inception_4d/output"
  top: "inception_4e/pool/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "inception_4e/concat"
  type: "Concat"
  bottom: "inception_4e/3x3"
  bottom: "inception_4e/double3x3b"
  bottom: "inception_4e/pool/3x3_s2"
  top: "inception_4e/concat"
}
layer {
  name: "inception_4e_global_pool"
  type: "Pooling"
  bottom: "inception_4e/concat"
  top: "inception_4e_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_4e_1x1_down"
  type: "Convolution"
  bottom: "inception_4e_global_pool"
  top: "inception_4e_1x1_down"
  convolution_param {
    num_output: 66
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4e_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_4e_1x1_down"
  top: "inception_4e_1x1_down"
}
layer {
  name: "inception_4e_1x1_up"
  type: "Convolution"
  bottom: "inception_4e_1x1_down"
  top: "inception_4e_1x1_up"
  convolution_param {
    num_output: 1056
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_4e_prob"
  type: "Sigmoid"
  bottom: "inception_4e_1x1_up"
  top: "inception_4e_1x1_up"
}
layer {
  name: "inception_4e_prob_reshape"
  type: "Reshape"
  bottom: "inception_4e_1x1_up"
  top: "inception_4e_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_4e_scale"
  type: "Scale"
  bottom: "inception_4e/concat"
  bottom: "inception_4e_prob_reshape"
  top: "inception_4e/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_5a/1x1"
  type: "Convolution"
  bottom: "inception_4e/output"
  top: "inception_5a/1x1"
  convolution_param {
    num_output: 352
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_5a/1x1/bn"
  type: "BatchNorm"
  bottom: "inception_5a/1x1"
  top: "inception_5a/1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a/1x1/bn/scale"
  type: "Scale"
  bottom: "inception_5a/1x1"
  top: "inception_5a/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5a/relu_1x1"
  type: "ReLU"
  bottom: "inception_5a/1x1"
  top: "inception_5a/1x1"
}
layer {
  name: "inception_5a/3x3_reduce"
  type: "Convolution"
  bottom: "inception_4e/output"
  top: "inception_5a/3x3_reduce"
  convolution_param {
    num_output: 192
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_5a/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5a/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/3x3_reduce"
}
layer {
  name: "inception_5a/3x3"
  type: "Convolution"
  bottom: "inception_5a/3x3_reduce"
  top: "inception_5a/3x3"
  convolution_param {
    num_output: 320
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_5a/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_5a/3x3"
  top: "inception_5a/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_5a/3x3"
  top: "inception_5a/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5a/relu_3x3"
  type: "ReLU"
  bottom: "inception_5a/3x3"
  top: "inception_5a/3x3"
}
layer {
  name: "inception_5a/double3x3_reduce"
  type: "Convolution"
  bottom: "inception_4e/output"
  top: "inception_5a/double3x3_reduce"
  convolution_param {
    num_output: 160
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_5a/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_5a/double3x3_reduce"
  top: "inception_5a/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_5a/double3x3_reduce"
  top: "inception_5a/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5a/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_5a/double3x3_reduce"
  top: "inception_5a/double3x3_reduce"
}
layer {
  name: "inception_5a/double3x3a"
  type: "Convolution"
  bottom: "inception_5a/double3x3_reduce"
  top: "inception_5a/double3x3a"
  convolution_param {
    num_output: 224
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_5a/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_5a/double3x3a"
  top: "inception_5a/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_5a/double3x3a"
  top: "inception_5a/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5a/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_5a/double3x3a"
  top: "inception_5a/double3x3a"
}
layer {
  name: "inception_5a/double3x3b"
  type: "Convolution"
  bottom: "inception_5a/double3x3a"
  top: "inception_5a/double3x3b"
  convolution_param {
    num_output: 224
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_5a/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_5a/double3x3b"
  top: "inception_5a/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_5a/double3x3b"
  top: "inception_5a/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5a/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_5a/double3x3b"
  top: "inception_5a/double3x3b"
}
layer {
  name: "inception_5a/pool"
  type: "Pooling"
  bottom: "inception_4e/output"
  top: "inception_5a/pool"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5a/pool_proj"
  type: "Convolution"
  bottom: "inception_5a/pool"
  top: "inception_5a/pool_proj"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_5a/pool_proj/bn"
  type: "BatchNorm"
  bottom: "inception_5a/pool_proj"
  top: "inception_5a/pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5a/pool_proj/bn/scale"
  type: "Scale"
  bottom: "inception_5a/pool_proj"
  top: "inception_5a/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5a/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_5a/pool_proj"
  top: "inception_5a/pool_proj"
}
layer {
  name: "inception_5a/concat"
  type: "Concat"
  bottom: "inception_5a/1x1"
  bottom: "inception_5a/3x3"
  bottom: "inception_5a/double3x3b"
  bottom: "inception_5a/pool_proj"
  top: "inception_5a/concat"
}
layer {
  name: "inception_5a_global_pool"
  type: "Pooling"
  bottom: "inception_5a/concat"
  top: "inception_5a_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_5a_1x1_down"
  type: "Convolution"
  bottom: "inception_5a_global_pool"
  top: "inception_5a_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_5a_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_5a_1x1_down"
  top: "inception_5a_1x1_down"
}
layer {
  name: "inception_5a_1x1_up"
  type: "Convolution"
  bottom: "inception_5a_1x1_down"
  top: "inception_5a_1x1_up"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_5a_prob"
  type: "Sigmoid"
  bottom: "inception_5a_1x1_up"
  top: "inception_5a_1x1_up"
}
layer {
  name: "inception_5a_prob_reshape"
  type: "Reshape"
  bottom: "inception_5a_1x1_up"
  top: "inception_5a_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_5a_scale"
  type: "Scale"
  bottom: "inception_5a/concat"
  bottom: "inception_5a_prob_reshape"
  top: "inception_5a/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "inception_5b/1x1"
  type: "Convolution"
  bottom: "inception_5a/output"
  top: "inception_5b/1x1"
  convolution_param {
    num_output: 352
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_5b/1x1/bn"
  type: "BatchNorm"
  bottom: "inception_5b/1x1"
  top: "inception_5b/1x1"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b/1x1/bn/scale"
  type: "Scale"
  bottom: "inception_5b/1x1"
  top: "inception_5b/1x1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5b/relu_1x1"
  type: "ReLU"
  bottom: "inception_5b/1x1"
  top: "inception_5b/1x1"
}
layer {
  name: "inception_5b/3x3_reduce"
  type: "Convolution"
  bottom: "inception_5a/output"
  top: "inception_5b/3x3_reduce"
  convolution_param {
    num_output: 192
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_5b/3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b/3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5b/relu_3x3_reduce"
  type: "ReLU"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/3x3_reduce"
}
layer {
  name: "inception_5b/3x3"
  type: "Convolution"
  bottom: "inception_5b/3x3_reduce"
  top: "inception_5b/3x3"
  convolution_param {
    num_output: 320
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_5b/3x3/bn"
  type: "BatchNorm"
  bottom: "inception_5b/3x3"
  top: "inception_5b/3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b/3x3/bn/scale"
  type: "Scale"
  bottom: "inception_5b/3x3"
  top: "inception_5b/3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5b/relu_3x3"
  type: "ReLU"
  bottom: "inception_5b/3x3"
  top: "inception_5b/3x3"
}
layer {
  name: "inception_5b/double3x3_reduce"
  type: "Convolution"
  bottom: "inception_5a/output"
  top: "inception_5b/double3x3_reduce"
  convolution_param {
    num_output: 192
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_5b/double3x3_reduce/bn"
  type: "BatchNorm"
  bottom: "inception_5b/double3x3_reduce"
  top: "inception_5b/double3x3_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b/double3x3_reduce/bn/scale"
  type: "Scale"
  bottom: "inception_5b/double3x3_reduce"
  top: "inception_5b/double3x3_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5b/relu_double3x3_reduce"
  type: "ReLU"
  bottom: "inception_5b/double3x3_reduce"
  top: "inception_5b/double3x3_reduce"
}
layer {
  name: "inception_5b/double3x3a"
  type: "Convolution"
  bottom: "inception_5b/double3x3_reduce"
  top: "inception_5b/double3x3a"
  convolution_param {
    num_output: 224
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_5b/double3x3a/bn"
  type: "BatchNorm"
  bottom: "inception_5b/double3x3a"
  top: "inception_5b/double3x3a"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b/double3x3a/bn/scale"
  type: "Scale"
  bottom: "inception_5b/double3x3a"
  top: "inception_5b/double3x3a"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5b/relu_double3x3a"
  type: "ReLU"
  bottom: "inception_5b/double3x3a"
  top: "inception_5b/double3x3a"
}
layer {
  name: "inception_5b/double3x3b"
  type: "Convolution"
  bottom: "inception_5b/double3x3a"
  top: "inception_5b/double3x3b"
  convolution_param {
    num_output: 224
    bias_term: false
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "inception_5b/double3x3b/bn"
  type: "BatchNorm"
  bottom: "inception_5b/double3x3b"
  top: "inception_5b/double3x3b"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b/double3x3b/bn/scale"
  type: "Scale"
  bottom: "inception_5b/double3x3b"
  top: "inception_5b/double3x3b"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5b/relu_double3x3b"
  type: "ReLU"
  bottom: "inception_5b/double3x3b"
  top: "inception_5b/double3x3b"
}
layer {
  name: "inception_5b/pool"
  type: "Pooling"
  bottom: "inception_5a/output"
  top: "inception_5b/pool"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 1
    pad: 1
  }
}
layer {
  name: "inception_5b/pool_proj"
  type: "Convolution"
  bottom: "inception_5b/pool"
  top: "inception_5b/pool_proj"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
  }
}
layer {
  name: "inception_5b/pool_proj/bn"
  type: "BatchNorm"
  bottom: "inception_5b/pool_proj"
  top: "inception_5b/pool_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "inception_5b/pool_proj/bn/scale"
  type: "Scale"
  bottom: "inception_5b/pool_proj"
  top: "inception_5b/pool_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "inception_5b/relu_pool_proj"
  type: "ReLU"
  bottom: "inception_5b/pool_proj"
  top: "inception_5b/pool_proj"
}
layer {
  name: "inception_5b/concat"
  type: "Concat"
  bottom: "inception_5b/1x1"
  bottom: "inception_5b/3x3"
  bottom: "inception_5b/double3x3b"
  bottom: "inception_5b/pool_proj"
  top: "inception_5b/concat"
}
layer {
  name: "inception_5b_global_pool"
  type: "Pooling"
  bottom: "inception_5b/concat"
  top: "inception_5b_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "inception_5b_1x1_down"
  type: "Convolution"
  bottom: "inception_5b_global_pool"
  top: "inception_5b_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_5b_1x1_down/relu"
  type: "ReLU"
  bottom: "inception_5b_1x1_down"
  top: "inception_5b_1x1_down"
}
layer {
  name: "inception_5b_1x1_up"
  type: "Convolution"
  bottom: "inception_5b_1x1_down"
  top: "inception_5b_1x1_up"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "inception_5b_prob"
  type: "Sigmoid"
  bottom: "inception_5b_1x1_up"
  top: "inception_5b_1x1_up"
}
layer {
  name: "inception_5b_prob_reshape"
  type: "Reshape"
  bottom: "inception_5b_1x1_up"
  top: "inception_5b_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 0
    }
  }
}
layer {
  name: "inception_5b_scale"
  type: "Scale"
  bottom: "inception_5b/concat"
  bottom: "inception_5b_prob_reshape"
  top: "inception_5b/output"
  scale_param {
    axis: 0
    bias_term: false
  }
}
layer {
  name: "input_feat"
  type: "Convolution"
  bottom: "inception_5b/output"
  top: "input_feat"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 512
    kernel_size: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "mask_conv_1"
  type: "Convolution"
  bottom: "input_feat"
  top: "mask_conv_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "mask_map_1"
  type: "Sigmoid"
  bottom: "mask_conv_1"
  top: "mask_map_1"
}
layer {
  name: "tile_map_1"
  type: "Tile"
  bottom: "mask_map_1"
  top: "tile_map_1"
  tile_param {
    tiles: 512
  }
}
layer {
  name: "masked_1"
  type: "Eltwise"
  bottom: "input_feat"
  bottom: "tile_map_1"
  top: "masked_1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "pooled_1"
  type: "Pooling"
  bottom: "masked_1"
  top: "pooled_1"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}

layer {
  name: "mask_conv_2"
  type: "Convolution"
  bottom: "input_feat"
  top: "mask_conv_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "mask_map_2"
  type: "Sigmoid"
  bottom: "mask_conv_2"
  top: "mask_map_2"
}
layer {
  name: "tile_map_2"
  type: "Tile"
  bottom: "mask_map_2"
  top: "tile_map_2"
  tile_param {
    tiles: 512
  }
}
layer {
  name: "masked_2"
  type: "Eltwise"
  bottom: "input_feat"
  bottom: "tile_map_2"
  top: "masked_2"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "pooled_2"
  type: "Pooling"
  bottom: "masked_2"
  top: "pooled_2"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}

layer {
  name: "mask_conv_3"
  type: "Convolution"
  bottom: "input_feat"
  top: "mask_conv_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "mask_map_3"
  type: "Sigmoid"
  bottom: "mask_conv_3"
  top: "mask_map_3"
}
layer {
  name: "tile_map_3"
  type: "Tile"
  bottom: "mask_map_3"
  top: "tile_map_3"
  tile_param {
    tiles: 512
  }
}
layer {
  name: "masked_3"
  type: "Eltwise"
  bottom: "input_feat"
  bottom: "tile_map_3"
  top: "masked_3"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "pooled_3"
  type: "Pooling"
  bottom: "masked_3"
  top: "pooled_3"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}

layer {
  name: "mask_conv_4"
  type: "Convolution"
  bottom: "input_feat"
  top: "mask_conv_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "mask_map_4"
  type: "Sigmoid"
  bottom: "mask_conv_4"
  top: "mask_map_4"
}
layer {
  name: "tile_map_4"
  type: "Tile"
  bottom: "mask_map_4"
  top: "tile_map_4"
  tile_param {
    tiles: 512
  }
}
layer {
  name: "masked_4"
  type: "Eltwise"
  bottom: "input_feat"
  bottom: "tile_map_4"
  top: "masked_4"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "pooled_4"
  type: "Pooling"
  bottom: "masked_4"
  top: "pooled_4"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}

layer {
  name: "mask_conv_5"
  type: "Convolution"
  bottom: "input_feat"
  top: "mask_conv_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "mask_map_5"
  type: "Sigmoid"
  bottom: "mask_conv_5"
  top: "mask_map_5"
}
layer {
  name: "tile_map_5"
  type: "Tile"
  bottom: "mask_map_5"
  top: "tile_map_5"
  tile_param {
    tiles: 512
  }
}
layer {
  name: "masked_5"
  type: "Eltwise"
  bottom: "input_feat"
  bottom: "tile_map_5"
  top: "masked_5"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "pooled_5"
  type: "Pooling"
  bottom: "masked_5"
  top: "pooled_5"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}


layer {
  name: "mask_conv_6"
  type: "Convolution"
  bottom: "input_feat"
  top: "mask_conv_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "mask_map_6"
  type: "Sigmoid"
  bottom: "mask_conv_6"
  top: "mask_map_6"
}
layer {
  name: "tile_map_6"
  type: "Tile"
  bottom: "mask_map_6"
  top: "tile_map_6"
  tile_param {
    tiles: 512
  }
}
layer {
  name: "masked_6"
  type: "Eltwise"
  bottom: "input_feat"
  bottom: "tile_map_6"
  top: "masked_6"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "pooled_6"
  type: "Pooling"
  bottom: "masked_6"
  top: "pooled_6"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}

layer {
  name: "mask_conv_7"
  type: "Convolution"
  bottom: "input_feat"
  top: "mask_conv_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "mask_map_7"
  type: "Sigmoid"
  bottom: "mask_conv_7"
  top: "mask_map_7"
}
layer {
  name: "tile_map_7"
  type: "Tile"
  bottom: "mask_map_7"
  top: "tile_map_7"
  tile_param {
    tiles: 512
  }
}
layer {
  name: "masked_7"
  type: "Eltwise"
  bottom: "input_feat"
  bottom: "tile_map_7"
  top: "masked_7"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "pooled_7"
  type: "Pooling"
  bottom: "masked_7"
  top: "pooled_7"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}

layer {
  name: "mask_conv_8"
  type: "Convolution"
  bottom: "input_feat"
  top: "mask_conv_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    kernel_size: 1
    weight_filler {
      type: "xavier"
      variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "mask_map_8"
  type: "Sigmoid"
  bottom: "mask_conv_8"
  top: "mask_map_8"
}
layer {
  name: "tile_map_8"
  type: "Tile"
  bottom: "mask_map_8"
  top: "tile_map_8"
  tile_param {
    tiles: 512
  }
}
layer {
  name: "masked_8"
  type: "Eltwise"
  bottom: "input_feat"
  bottom: "tile_map_8"
  top: "masked_8"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "pooled_8"
  type: "Pooling"
  bottom: "masked_8"
  top: "pooled_8"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}




layer {  
    name: "pooled_1_reshape"  
    type: "Reshape"  
    bottom: "pooled_1"  
    top: "pooled_1_reshape"  
    reshape_param {  
        shape {  
            dim: 0 
            dim: -1   
        }  
    }  
} 

layer {  
    name: "pooled_2_reshape"  
    type: "Reshape"  
    bottom: "pooled_2"  
    top: "pooled_2_reshape"  
    reshape_param {  
        shape {  
            dim: 0 
            dim: -1   
        }  
    }  
} 

layer {  
    name: "pooled_3_reshape"  
    type: "Reshape"  
    bottom: "pooled_3"  
    top: "pooled_3_reshape"  
    reshape_param {  
        shape {  
            dim: 0 
            dim: -1   
        }  
    }  
} 
layer {  
    name: "pooled_4_reshape"  
    type: "Reshape"  
    bottom: "pooled_4"  
    top: "pooled_4_reshape"  
    reshape_param {  
        shape {  
            dim: 0 
            dim: -1   
        }  
    }  
} 
layer {  
    name: "pooled_5_reshape"  
    type: "Reshape"  
    bottom: "pooled_5"  
    top: "pooled_5_reshape"  
    reshape_param {  
        shape {  
            dim: 0 
            dim: -1   
        }  
    }  
} 
layer {  
    name: "pooled_6_reshape"  
    type: "Reshape"  
    bottom: "pooled_6"  
    top: "pooled_6_reshape"  
    reshape_param {  
        shape {  
            dim: 0 
            dim: -1   
        }  
    }  
} 
layer {  
    name: "pooled_7_reshape"  
    type: "Reshape"  
    bottom: "pooled_7"  
    top: "pooled_7_reshape"  
    reshape_param {  
        shape {  
            dim: 0 
            dim: -1   
        }  
    }  
} 
layer {  
    name: "pooled_8_reshape"  
    type: "Reshape"  
    bottom: "pooled_8"  
    top: "pooled_8_reshape"  
    reshape_param {  
        shape {  
            dim: 0 
            dim: -1   
        }  
    }  
} 









###################

layer {
  name: "pooled_1_1"
  type: "Pooling"
  bottom: "input_feat"
  top: "pooled_1_1"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "fc1_1"
  type: "InnerProduct"
  bottom: "pooled_1_1"
  top: "fc1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc1_relu"
  type: "ReLU"
  bottom: "fc1_1"
  top: "fc1_1"
}
layer {
  name: "fc1_2"
  type: "InnerProduct"
  bottom: "fc1_1"
  top: "fc1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc1_2_sig"
  type: "Sigmoid"
  bottom: "fc1_2"
  top: "fc1_2_sig"
}
layer {
  name: "se1"
  type: "Eltwise"
  bottom: "pooled_1_reshape"
  bottom: "fc1_2_sig"
  top: "se1"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "linear_1"
  type: "InnerProduct"
  bottom: "se1"
  top: "linear_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
#######################
###################

layer {
  name: "pooled_2_1"
  type: "Pooling"
  bottom: "input_feat"
  top: "pooled_2_1"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "fc2_1"
  type: "InnerProduct"
  bottom: "pooled_2_1"
  top: "fc2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc2_relu"
  type: "ReLU"
  bottom: "fc2_1"
  top: "fc2_1"
}
layer {
  name: "fc2_2"
  type: "InnerProduct"
  bottom: "fc2_1"
  top: "fc2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc2_2_sig"
  type: "Sigmoid"
  bottom: "fc2_2"
  top: "fc2_2_sig"
}
layer {
  name: "se2"
  type: "Eltwise"
  bottom: "pooled_2_reshape"
  bottom: "fc2_2_sig"
  top: "se2"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "linear_2"
  type: "InnerProduct"
  bottom: "se2"
  top: "linear_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

###################

layer {
  name: "pooled_3_1"
  type: "Pooling"
  bottom: "input_feat"
  top: "pooled_3_1"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "fc3_1"
  type: "InnerProduct"
  bottom: "pooled_3_1"
  top: "fc3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc3_relu"
  type: "ReLU"
  bottom: "fc3_1"
  top: "fc3_1"
}
layer {
  name: "fc3_2"
  type: "InnerProduct"
  bottom: "fc3_1"
  top: "fc3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc3_2_sig"
  type: "Sigmoid"
  bottom: "fc3_2"
  top: "fc3_2_sig"
}
layer {
  name: "se3"
  type: "Eltwise"
  bottom: "pooled_3_reshape"
  bottom: "fc3_2_sig"
  top: "se3"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "linear_3"
  type: "InnerProduct"
  bottom: "se3"
  top: "linear_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}###################

layer {
  name: "pooled_4_1"
  type: "Pooling"
  bottom: "input_feat"
  top: "pooled_4_1"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "fc4_1"
  type: "InnerProduct"
  bottom: "pooled_4_1"
  top: "fc4_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc4_relu"
  type: "ReLU"
  bottom: "fc4_1"
  top: "fc4_1"
}
layer {
  name: "fc4_2"
  type: "InnerProduct"
  bottom: "fc4_1"
  top: "fc4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc4_2_sig"
  type: "Sigmoid"
  bottom: "fc4_2"
  top: "fc4_2_sig"
}
layer {
  name: "se4"
  type: "Eltwise"
  bottom: "pooled_4_reshape"
  bottom: "fc4_2_sig"
  top: "se4"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "linear_4"
  type: "InnerProduct"
  bottom: "se4"
  top: "linear_4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}###################

layer {
  name: "pooled_5_1"
  type: "Pooling"
  bottom: "input_feat"
  top: "pooled_5_1"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "fc5_1"
  type: "InnerProduct"
  bottom: "pooled_5_1"
  top: "fc5_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc5_relu"
  type: "ReLU"
  bottom: "fc5_1"
  top: "fc5_1"
}
layer {
  name: "fc5_2"
  type: "InnerProduct"
  bottom: "fc5_1"
  top: "fc5_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc5_2_sig"
  type: "Sigmoid"
  bottom: "fc5_2"
  top: "fc5_2_sig"
}
layer {
  name: "se5"
  type: "Eltwise"
  bottom: "pooled_5_reshape"
  bottom: "fc5_2_sig"
  top: "se5"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "linear_5"
  type: "InnerProduct"
  bottom: "se5"
  top: "linear_5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}###################

layer {
  name: "pooled_6_1"
  type: "Pooling"
  bottom: "input_feat"
  top: "pooled_6_1"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "fc6_1"
  type: "InnerProduct"
  bottom: "pooled_6_1"
  top: "fc6_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc6_relu"
  type: "ReLU"
  bottom: "fc6_1"
  top: "fc6_1"
}
layer {
  name: "fc6_2"
  type: "InnerProduct"
  bottom: "fc6_1"
  top: "fc6_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc6_2_sig"
  type: "Sigmoid"
  bottom: "fc6_2"
  top: "fc6_2_sig"
}
layer {
  name: "se6"
  type: "Eltwise"
  bottom: "pooled_6_reshape"
  bottom: "fc6_2_sig"
  top: "se6"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "linear_6"
  type: "InnerProduct"
  bottom: "se6"
  top: "linear_6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}###################

layer {
  name: "pooled_7_1"
  type: "Pooling"
  bottom: "input_feat"
  top: "pooled_7_1"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "fc7_1"
  type: "InnerProduct"
  bottom: "pooled_7_1"
  top: "fc7_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc7_relu"
  type: "ReLU"
  bottom: "fc7_1"
  top: "fc7_1"
}
layer {
  name: "fc7_2"
  type: "InnerProduct"
  bottom: "fc7_1"
  top: "fc7_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc7_2_sig"
  type: "Sigmoid"
  bottom: "fc7_2"
  top: "fc7_2_sig"
}
layer {
  name: "se7"
  type: "Eltwise"
  bottom: "pooled_7_reshape"
  bottom: "fc7_2_sig"
  top: "se7"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "linear_7"
  type: "InnerProduct"
  bottom: "se7"
  top: "linear_7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}###################

layer {
  name: "pooled_8_1"
  type: "Pooling"
  bottom: "input_feat"
  top: "pooled_8_1"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
layer {
  name: "fc8_1"
  type: "InnerProduct"
  bottom: "pooled_8_1"
  top: "fc8_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc8_relu"
  type: "ReLU"
  bottom: "fc8_1"
  top: "fc8_1"
}
layer {
  name: "fc8_2"
  type: "InnerProduct"
  bottom: "fc8_1"
  top: "fc8_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "fc8_2_sig"
  type: "Sigmoid"
  bottom: "fc8_2"
  top: "fc8_2_sig"
}
layer {
  name: "se8"
  type: "Eltwise"
  bottom: "pooled_8_reshape"
  bottom: "fc8_2_sig"
  top: "se8"
  eltwise_param {
    operation: PROD
  }
}
layer {
  name: "linear_8"
  type: "InnerProduct"
  bottom: "se8"
  top: "linear_8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "concat_features"
  type: "Concat"
  bottom: "linear_1"
  bottom: "linear_2"
  bottom: "linear_3"
  bottom: "linear_4"
  bottom: "linear_5"
  bottom: "linear_6"
  bottom: "linear_7"
  bottom: "linear_8"
  top: "concat_features"
}
layer {
  name: "normed_feature"
  type: "L2Norm"
  bottom: "concat_features"
  top: "normed_feature"
}
layer {
  name: "triplet_loss"
  type: "OnlineTripletLoss"
  bottom: "normed_feature"
  bottom: "label"
  top: "triplet_loss"
  top: "triplet_acc"
  triplet_loss_param {
    margin: 0.2
    negative: ALL
    positive: ALL
  }
}
