# Enter your network definition here.
# Use Shift+Enter to update the visualization.
layer {
  name: "data"
  type: "Python"
  top: "top_0"
  top: "top_1"
  

  python_param {
    module: "data_provider_layer"
    layer: "DataProviderLayer"
    param_str: "{\"newsize\": 227, \"batchsize\": 64}"
  }
}

layer {
  bottom: "top_0"
  top: "conv1"
  name: "conv1"
  type: "Convolution"
 
  convolution_param {
    num_output: 96
    kernel_size: 7
    stride: 2
  }
}



layer {
  bottom: "conv1"
  top: "conv1"
  name: "relu1"
  type: "ReLU"
}


layer {
  bottom: "conv1"
  top: "norm1"
  name: "norm1"
  type: "LRN"
  lrn_param {
    local_size: 5
    alpha: 0.0005
    beta: 0.75
    k: 2
  }
}




layer {
  bottom: "norm1"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}




layer {
  bottom: "pool1"
  top: "conv2"
  name: "conv2"
  type: "Convolution"
  convolution_param {
    num_output: 256
    kernel_size: 5
  }
}


layer {
  bottom: "conv2"
  top: "conv2"
  name: "relu2"
  type: "ReLU"
}



layer {
  bottom: "conv2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}


layer {
  bottom: "pool2"
  top: "conv3"
  name: "conv3"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}


layer {
  bottom: "conv3"
  top: "conv3"
  name: "relu3"
  type: "ReLU"
}


layer {
  bottom: "conv3"
  top: "conv4"
  name: "conv4"
  type: "Convolution"
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}



layer {
  bottom: "conv4"
  top: "conv4"
  name: "relu4"
  type: "ReLU"
}


layer {
  bottom: "conv4"
  top: "conv5"
  name: "conv5"
  type: "Convolution"
 
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}


layer {
  bottom: "conv5"
  top: "conv5"
  name: "relu5"
  type: "ReLU"
}


layer {
  bottom: "conv5"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 3
  }
}


layer {
  bottom: "pool5"
  top: "fc6"
  name: "fc6"
  type: "InnerProduct"
  param {
    name: "fc6_w"
    lr_mult: 10

    decay_mult: 1
  }
  param {
    name: "fc6_b"
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  } 
}


layer {
  bottom: "fc6"
  top: "fc6"
  name: "relu6"
  type: "ReLU"
}

layer {
  bottom: "fc6"
  top: "fc6"
  name: "drop6"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}




layer {
  bottom: "fc6"
  top: "fc7_n"
  name: "fc7_n"
  type: "InnerProduct"
  param {
    name: "fc7_w"
    lr_mult: 10

    decay_mult: 1
  }
  param {
    name: "fc7_b"
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 298
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  } 
  
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc7_n"
  bottom: "top_1"
  top: "loss"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc7_n"
  bottom: "top_1"
  top: "accuracy"
}

